{"version":3,"file":"static/js/454.59361761.chunk.js","mappings":"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","sources":["components/Contacts/Contact.jsx","components/Filter/Filter.jsx","components/Contacts/Empty.jsx","components/Contacts/ContactsList.jsx","components/Contacts/ContactForm.jsx","components/Modal/Modal.jsx","components/AppBar/AddFab.jsx","pages/HomePages/HomePages.jsx"],"sourcesContent":["import { useDeleteContactMutation } from 'redux/api';\n\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport PersonIcon from '@mui/icons-material/Person';\nimport { Link, Paper } from '@mui/material';\n\nexport const Contact = ({ id, name, number }) => {\n  const [deleteContact, deleteInfo] = useDeleteContactMutation();\n  const handleDelete = () => deleteContact(id);\n\n  function getRandomHexColor() {\n    return `#${Math.floor(Math.random() * 16777215)\n      .toString(16)\n      .padStart(6, 0)}`;\n  }\n\n  return (\n    <ListItem\n      components={Paper}\n      secondaryAction={\n        <LoadingButton\n          edge=\"end\"\n          aria-label=\"delete\"\n          onClick={handleDelete}\n          title={`Delete ${name}`}\n          loading={deleteInfo.isLoading}\n          variant=\"outlined\"\n          color=\"success\"\n        >\n          <DeleteIcon />\n        </LoadingButton>\n      }\n      // sx={{ borderBottom: '1px solid lightGreen' }}\n    >\n      <ListItemAvatar>\n        <Avatar sx={{ backgroundColor: getRandomHexColor() }}>\n          <PersonIcon />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={name}\n        secondary={\n          <Link\n            href={'tel:' + number}\n            underline=\"hover\"\n            sx={{ color: 'green' }}\n          >\n            {number}\n          </Link>\n        }\n      />\n    </ListItem>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { getFilter } from 'redux/selectors';\n// import { FilterInput } from './Filter.styled';\nimport { TextField } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleFilterChange = event => {\n    return dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <TextField\n      variant=\"outlined\"\n      fullWidth\n      margin=\"normal\"\n      label=\"Filter\"\n      type=\"text\"\n      name=\"filter\"\n      placeholder=\"Find contacts by name\"\n      value={filter}\n      onChange={handleFilterChange}\n      color=\"success\"\n    />\n  );\n};\n","import { Box, Typography } from '@mui/material';\nimport React from 'react';\n\nconst Empty = () => {\n  return (\n    <Box sx={{ textAlign: 'center', marginTop: '24px', color: 'green' }}>\n      <Typography variant=\"h6\">The contact list is empty! </Typography>\n    </Box>\n  );\n};\n\nexport default Empty;\n","import { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/selectors';\nimport { Contact } from 'components/Contacts/Contact';\n// import { Ul } from './ContactsList.styled';\nimport { useGetContactsQuery } from 'redux/api';\n\nimport { styled } from '@mui/material/styles';\n// import Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader';\nimport { useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport Empty from './Empty';\n\nconst getFilteredContacts = (contacts, filter) => {\n  return contacts?.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nexport const ContactsList = () => {\n  const { data: contacts, isLoading, error } = useGetContactsQuery();\n  const filter = useSelector(getFilter);\n  const filteredContacts = getFilteredContacts(contacts, filter);\n\n  // Виводимо помилку\n  useEffect(() => {\n    if (error) toast.error(error.data.message);\n  }, [error]);\n\n  const Demo = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.background.paper,\n  }));\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {!isLoading && contacts?.length > 1 && <Filter />}\n      {!isLoading && contacts?.length < 1 && <Empty />}\n      {!isLoading && contacts && (\n        <Demo>\n          <List component=\"ul\">\n            {filteredContacts?.map(contact => (\n              <Contact\n                id={contact.id}\n                key={contact.id}\n                name={contact.name}\n                number={contact.number}\n              />\n            ))}\n          </List>\n        </Demo>\n      )}\n    </>\n  );\n\n  // return (\n  //   <Ul>\n  // {filteredContacts?.map(contact => (\n  //   <li key={contact.id}>\n  //     <Contact\n  //       id={contact.id}\n  //       name={contact.name}\n  //       number={contact.number}\n  //     />\n  //   </li>\n  // ))}\n  //   </Ul>\n  // );\n};\n","import { useDispatch } from 'react-redux';\nimport toast from 'react-hot-toast';\n\nimport SaveIco from '@mui/icons-material/Save';\nimport { LoadingButton } from '@mui/lab';\nimport { Box, TextField } from '@mui/material';\n\nimport { setOpenModal } from 'redux/modalSlice';\nimport { useAddContactMutation, useGetContactsQuery } from 'redux/api';\nimport { Formik } from 'formik';\n\nexport const ContactForm = () => {\n  const { data: contacts } = useGetContactsQuery();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const dispatch = useDispatch();\n\n  const isNameHas = name => {\n    return contacts.some(contact => contact.name === name);\n  };\n\n  const handleSubmit = ({ name, number }) => {\n    if (isNameHas(name)) {\n      toast.error(`${name} is already in contacts.`);\n      return;\n    }\n\n    try {\n      addContact({ name, number });\n      dispatch(setOpenModal(false));\n    } catch (error) {\n      toast.error(`Some error.`);\n    }\n  };\n\n  return (\n    <Box m={1}>\n      <Formik\n        initialValues={{ name: '', value: '' }}\n        onSubmit={values => {\n          handleSubmit(values);\n        }}\n      >\n        {({\n          values,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          /* and other goodies */\n        }) => (\n          <form onSubmit={handleSubmit}>\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              margin=\"normal\"\n              label=\"Name\"\n              type=\"text\"\n              name=\"name\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              required\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.name || ''}\n            />\n\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              margin=\"normal\"\n              label=\"Number\"\n              type=\"text\"\n              name=\"number\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n              required\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.number || ''}\n            />\n            <Box\n              sx={{\n                display: 'flex',\n                justifyContent: 'flex-end',\n                marginTop: '16px',\n              }}\n            >\n              <LoadingButton\n                variant=\"contained\"\n                margin=\"normal\"\n                type=\"submit\"\n                color=\"success\"\n                loading={isLoading}\n                loadingPosition=\"end\"\n                endIcon={<SaveIco />}\n              >\n                Add contact\n              </LoadingButton>\n            </Box>\n          </form>\n        )}\n      </Formik>\n    </Box>\n  );\n};\n","import { Dialog, DialogContent, DialogTitle, IconButton } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { ContactForm } from 'components/Contacts/ContactForm';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setOpenModal } from 'redux/modalSlice';\nimport { getOpenModal } from 'redux/selectors';\n\nconst Modal = () => {\n  const openModal = useSelector(getOpenModal);\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    dispatch(setOpenModal(false));\n  };\n\n  return (\n    <div>\n      <Dialog open={openModal} onClose={handleClose}>\n        <DialogTitle>Add contact</DialogTitle>\n        <IconButton\n          aria-label=\"close\"\n          onClick={handleClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: theme => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n        <DialogContent>\n          <ContactForm />\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { Fab } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport { setOpenModal } from 'redux/modalSlice';\nimport { useDispatch } from 'react-redux';\n\nconst AddFab = () => {\n  const dispatch = useDispatch();\n\n  const handleOpenModal = () => {\n    dispatch(setOpenModal(true));\n  };\n\n  return (\n    <Fab\n      sx={{\n        position: 'absolute',\n        display: { xs: 'flex', md: 'none' },\n        bottom: 16,\n        right: 16,\n        color: 'common.white',\n        bgcolor: 'green',\n        '&:hover': {\n          bgcolor: 'darkGreen',\n        },\n      }}\n      aria-label=\"Add contacts\"\n      color=\"green\"\n      onClick={handleOpenModal}\n    >\n      <AddIcon />\n    </Fab>\n  );\n};\n\nexport default AddFab;\n","import { useSelector } from 'react-redux';\nimport { getUser } from 'redux/selectors';\n\nimport { ContactsList } from 'components/Contacts/ContactsList';\nimport Modal from 'components/Modal/Modal';\nimport AddFab from 'components/AppBar/AddFab';\n\nconst HomePage = () => {\n  const { isLoggedIn } = useSelector(getUser);\n\n  return (\n    <>\n      {isLoggedIn && <ContactsList />}\n      <Modal />\n      <AddFab />\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["Contact","_ref","id","name","number","_useDeleteContactMuta","useDeleteContactMutation","_useDeleteContactMuta2","_slicedToArray","deleteContact","deleteInfo","_jsxs","ListItem","components","Paper","secondaryAction","_jsx","LoadingButton","edge","onClick","title","concat","loading","isLoading","variant","color","children","DeleteIcon","ListItemAvatar","Avatar","sx","backgroundColor","Math","floor","random","toString","padStart","PersonIcon","ListItemText","primary","secondary","Link","href","underline","Filter","dispatch","useDispatch","filter","useSelector","getFilter","TextField","fullWidth","margin","label","type","placeholder","value","onChange","event","setFilter","target","Box","textAlign","marginTop","Typography","ContactsList","_useGetContactsQuery","useGetContactsQuery","contacts","data","error","filteredContacts","contact","toLowerCase","includes","getFilteredContacts","useEffect","toast","message","Demo","styled","theme","palette","background","paper","_Fragment","Loader","length","Empty","List","component","map","ContactForm","_useAddContactMutatio","useAddContactMutation","_useAddContactMutatio2","addContact","handleSubmit","some","isNameHas","setOpenModal","m","Formik","initialValues","onSubmit","values","_ref2","handleChange","handleBlur","pattern","required","onBlur","display","justifyContent","loadingPosition","endIcon","SaveIco","openModal","getOpenModal","handleClose","Dialog","open","onClose","DialogTitle","IconButton","position","right","top","grey","CloseIcon","DialogContent","Fab","xs","md","bottom","bgcolor","AddIcon","isLoggedIn","getUser","Modal","AddFab"],"sourceRoot":""}